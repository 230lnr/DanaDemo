package routines;

import java.text.DateFormat;
import java.util.TimeZone;

import routines.system.FastDateParser;
import routines.system.TalendTimestampWithTZ;

/*
 * user specification: the function's comment should contain keys as follows: 1. write about the function's comment.but
 * it must be before the "{talendTypes}" key.
 * 
 * 2. {talendTypes} 's value must be talend Type, it is required . its value should be one of: String, char | Character,
 * long | Long, int | Integer, boolean | Boolean, byte | Byte, Date, double | Double, float | Float, Object, short |
 * Short
 * 
 * 3. {Category} define a category for the Function. it is required. its value is user-defined .
 * 
 * 4. {param} 's format is: {param} <type>[(<default value or closed list values>)] <name>[ : <comment>]
 * 
 * <type> 's value should be one of: string, int, list, double, object, boolean, long, char, date. <name>'s value is the
 * Function's parameter name. the {param} is optional. so if you the Function without the parameters. the {param} don't
 * added. you can have many parameters for the Function.
 * 
 * 5. {example} gives a example for the Function. it is optional.
 */
public class Informatica {


	//String to double
	public static double TO_DECIMAL(String s,int a){
		return Double.parseDouble(s);
	}

	//String to double
	public static double to_decimal(String s,int a){
		return Double.parseDouble(s);
	}
	
	

	//Round double
	public static int ROUND(double a){
		return (int)a;
	}

	////Round double
	public static int round(double a){
		return (int)a;
	}

	//Round float
	public static int ROUND(float a){
		return Math.round(a);
	}

	////Round double
	public static int round(float a){
		return Math.round(a);
	}

	//format Date
	public static String GET_DATE_PART(java.util.Date date,String pattern){
		DateFormat format = FastDateParser.getInstance(pattern);
        if (date instanceof TalendTimestampWithTZ) {
            format.setTimeZone(((TalendTimestampWithTZ) date).getTimeZone());
        } else {
            format.setTimeZone(TimeZone.getDefault());
        }
        return format.format(date);
	}
	
	////Replace String
	public static String REPLACESTR(int replaceall, String s, String oldPattern,String newPattern){
		if(replaceall == 1){
			return s.replace(oldPattern, newPattern);
		}
		else{
			return s.substring(0,s.indexOf(oldPattern))+ newPattern + s.substring(s.indexOf(oldPattern)+oldPattern.length()+1);
		}
			
	}
	



}
